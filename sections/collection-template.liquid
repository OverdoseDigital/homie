{%- assign per_row = section.settings.per_row -%}
{% assign paginate_by = per_row | times: 5 %}
{% if section.settings.collection_tags_style == 'inline' and collection.all_tags.size > 0 %}
	{% assign paginate_by = paginate_by | minus: 1 %}
{% elsif section.settings.collection_subnav_style == 'inline' %}
	{% assign paginate_by = paginate_by | minus: 1 %}
{% endif %}

{% paginate collection.products by paginate_by %}

<div
	id="CollectionSection"
	data-section-id="{{ section.id }}"
	data-section-type="collection-template"
	{% if section.settings.parallax %}data-parallax="true"{% endif %}>

	{%- if section.settings.collection_image_enable and collection.image -%}
	<div class="collection-hero loading--delayed">
		{%- if section.settings.parallax -%}
			<div class="parallax-container">
				<div
					class="parallax-image collection-hero__image lazyload"
					data-bgset="{% include 'bgset', image: collection.image %}"
					data-sizes="auto">
				</div>
			</div>
		{%- else -%}
			{%- assign img_url = collection.image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}
			<img class="collection-hero__image image-fit lazyload"
				src=""
				data-src="{{ img_url }}"
				data-aspectratio="{{ collection.image.aspect_ratio }}"
				data-sizes="auto"
				data-parent-fit="cover"
				alt="{{ collection.image.alt | escape }}">
			<noscript>
				<img class="collection-hero__image image-fit" src="{{ collection.image | img_url: '1400x' }}" 
				alt="{{ collection.image.alt | escape }}">
			</noscript>
		{%- endif -%}

		<div class="collection-hero__content">
			<div class="page-width">
				<header class="section-header section-header--hero">
					<h1 class="section-header__title section-header__title--medium">
						<div class="animation-cropper">
							<div class="animation-contents boost-pfs-filter-collection-header">
								{{ collection.title }}
							</div>
						</div>
					</h1>
				</header>
			</div>
		</div>
	</div>
	{%- endif -%}

	<div class="page-width page-content">

		{% include 'breadcrumbs' %}

		{% unless section.settings.collection_image_enable and collection.image %}
			<header class="section-header">
				<h1 class="boost-pfs-filter-collection-header section-header__title">
					{{ collection.title }}
				</h1>
			</header>
		{% endunless %}

		{% if section.settings.collection_tags_style == 'dropdown' or section.settings.collection_sort_enable %}
			<div class="collection-filter">
				<div class="grid grid--uniform">

					{% if section.settings.collection_tags_style == 'dropdown' %}
						<div class="grid__item small--one-half medium-up--one-quarter">
						</div>
					{% endif %}

					{% if section.settings.collection_sort_enable %}
						<div class="boost-pfs-filter-top-sorting grid__item small--one-half medium-up--one-quarter float-right">{% include 'boost-pfs-filter-skeleton', width: 3 %}</div>
					{% endif %}

				</div>
			</div>
		{% endif %}

		{% if collection.description != blank %}
			<div class="boost-pfs-filter-collection-description rte">
				{{ collection.description }}
			</div>
			<hr class="hr--clear hr--small">
		{% endif %}

		<div id="CollectionAjaxResult">
			<div id="CollectionAjaxContent">
				<div class="boost-pfs-filter-wrapper grid grid--uniform">
				
				{% assign grid_item_width = 'small--one-half medium-up--one-third' %}

				{% case per_row %}
					{% when 1 %}
						{%- assign grid_item_width = '' -%}
					{% when 2 %}
						{%- assign grid_item_width = 'medium-up--one-half' -%}
					{% when 3 %}
						{%- assign grid_item_width = 'small--one-half medium-up--one-third' -%}
					{% when 4 %}
						{%- assign grid_item_width = 'small--one-half medium-up--one-quarter' -%}
					{% when 5 %}
						{%- assign grid_item_width = 'small--one-half medium-up--one-fifth' -%}
				{% endcase %}

				{% if section.settings.collection_tags_style == 'inline' %}
					{% if collection.all_tags.size > 0 %}
					<div class="grid__item {{ grid_item_width }}">
						<ul class="tags tags--vertical">
							<li{% unless current_tags %} class="tag--active"{% endunless %}>
							{% if collection.handle %}
								<a href="/collections/{{ collection.handle }}">
									{{ 'collections.general.all_of_collection' | t }}
								</a>
							{% elsif collection.current_type %}
								<a href="{{ collection.current_type | url_for_type }}">
									{{ 'collections.general.all_of_collection' | t }}
								</a>
							{% elsif collection.current_vendor %}
								<a href="{{ collection.current_vendor | url_for_vendor }}">
									{{ 'collections.general.all_of_collection' | t }}
								</a>
							{% endif %}
							</li>

							{% for tag in collection.all_tags %}
								{%- assign tag_with_hyphens = tag | replace: ' ', '-' -%}
								{% if forloop.index == 7 %}
									</ul>
									<ul id="TagList-{{ section.id }}" class="tags tags--vertical collapsible-content collapsible-content--all">
										<div class="collapsible-content__inner collapsible-content__inner--no-translate">
								{% endif %}
								{% if current_tags contains tag or current_tags contains tag_with_hyphens %}
										<li class="tag--active">
											{{ tag | link_to_remove_tag: tag | replace: 'title=', 'class="js-no-transition" title=' }}
										</li>
								{% else %}
										<li>
											{{ tag | link_to_tag: tag | replace: 'title=', 'class="js-no-transition" title=' }}
										</li>
								{% endif %}

								{% if froloop.index == 7 %}
								</div>
								{% endif %}
							{% endfor %}
						</ul>

						{% if collection.all_tags.size > 6 %}
							<p>
								<button type="button" class="collapsible-trigger collapsible-trigger-btn btn btn--tertiary tags-toggle" aria-controls="TagList-{{ section.id }}">
									<span class="collapsible-label__closed">{{ 'collections.general.see_more' | t }}</span>
									<span class="collapsible-label__open">{{ 'collections.general.see_less' | t }}</span>
								</button>
							</p>
						{% endif %}
					</div>
					{% endif %}
				{% endif %}

				<div class="boost-pfs-filter-tree-mobile-button" >{% include 'boost-pfs-filter-skeleton', type: 'button' %}</div>
				<div class="boost-pfs-filter-tree boost-pfs-filter-tree-v" >
					{% comment %} Include placeholder template {% endcomment %}
					{% include 'boost-pfs-filter-skeleton', type: 'filter-tree'  %}
				</div>
				<div class="boost-pfs-filter-right">
					<div class="boost-pfs-filter-products">
					{% for product in collection.products %}
						{% include 'product-grid-item' %}
					{% endfor %}
					</div>
				</div>
			</div>

			<div class="boost-pfs-filter-bottom-pagination pagination"></div>
			<div class="boost-pfs-filter-load-more"></div>

		</div>
	</div>
</div>

{% if settings.quick_shop_enable %}
	{% for product in collection.products %}
		{% if product.available %}
			{% include 'quick-shop-modal' %}
		{% endif %}
	{% endfor %}
{% endif %}

{% endpaginate %}

<script>
	// Declare boostPFSThemeConfig variable
	var boostPFSThemeConfig = {
		label: {
			sorting: {% assign temp = 'collections.sorting.title' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Sorting" {% endunless %},
			sorting_best_selling: {% assign temp = 'collections.sorting.best_selling' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Best Selling" {% endunless %},
			sorting_featured: {% assign temp = 'collections.sorting.featured' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Featured" {% endunless %},
			sorting_title_ascending: {% assign temp = 'collections.sorting.az' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Alphabetically, A-Z" {% endunless %},
			sorting_title_descending: {% assign temp = 'collections.sorting.za' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Alphabetically, Z-A" {% endunless %},
			sorting_price_ascending: {% assign temp = 'collections.sorting.price_ascending' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Lowest Price" {% endunless %},
			sorting_price_descending: {% assign temp = 'collections.sorting.price_descending' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Highest Price" {% endunless %},
			sorting_date_ascending: {% assign temp = 'collections.sorting.date_ascending' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Date, Old to New" {% endunless %},
			sorting_date_descending: {% assign temp = 'collections.sorting.date_descending' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Date, New to Old" {% endunless %},
			sorting_sale_descending: {% assign temp = 'collections.sorting.sale_descending' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "% Off" {% endunless %},
			sorting_relevance: {% assign temp = 'collections.sorting.relevance' | t %} {% unless temp contains 'translation missing' %} {{ temp | json }} {% else %} "Relevance" {% endunless %},

			sold_out: {{ 'products.product.sold_out' | t | json }},
			save_html: {{ 'products.general.save_html' | t | json }},
			regular_price: {{ 'products.general.regular_price' | t | json }},
			sale_price: {{ 'products.general.sale_price' | t | json }},
			from_text_html: {{ 'products.general.from_text_html' | t | json }},
			quick_shop: {{ settings.quick_shop_text | json }},

			items_with_count_one: {{ 'collections.general.items_with_count.one' | t | json}},
			items_with_count_other: {{ 'collections.general.items_with_count.other' | t | json }},
		},
		custom: {
			products_per_page: {% if paginate_by %} {{ paginate_by | json }} {% else %} 24 {% endif %},
			products_per_row: {% if per_row %} {{ per_row }} {% else %} 4 {% endif %},
			grid_item_width: {% if grid_item_width != blank %} {{ grid_item_width | json }} {% else %} 'small--one-half medium-up--one-third' {% endif %},
			vendor_enable: {% if settings.vendor_enable %} {{ settings.vendor_enable | json }} {% else %} false {% endif %},
			quick_shop_enable: {% if settings.quick_shop_enable %} {{ settings.quick_shop_enable | json }} {% else %} false {% endif %},
			product_hover_image: {% if settings.product_hover_image %} {{ settings.product_hover_image | json }} {% else %} false {% endif %},
			product_grid_image_size: {% if settings.product_grid_image_size %} {{ settings.product_grid_image_size | json }} {% else %} 'natural' {% endif %},
			collection_color_swatches: {% if settings.collection_color_swatches %} {{ settings.collection_color_swatches | json }} {% else %} false {% endif %},      
			enable_product_reviews:  {% if settings.enable_product_reviews %} {{ settings.enable_product_reviews | json }} {% else %} false {% endif %},
		}
	};

	var boostPFSTemplate = {
		// Product grid item template
		'productGridItemHtml': {% render 'boost-pfs-filter-html', layout: 'productGridItemHtml' %},
			
		// Pagination template
		'previousActiveHtml': {% render 'boost-pfs-filter-html', layout: 'previousActiveHtml' %},
		'previousDisabledHtml': {% render 'boost-pfs-filter-html', layout: 'previousDisabledHtml' %},
		'nextActiveHtml': {% render 'boost-pfs-filter-html', layout: 'nextActiveHtml' %},
		'nextDisabledHtml': {% render 'boost-pfs-filter-html', layout: 'nextDisabledHtml' %},
		'pageItemHtml': {% render 'boost-pfs-filter-html', layout: 'pageItemHtml' %},
		'pageItemSelectedHtml': {% render 'boost-pfs-filter-html', layout: 'pageItemSelectedHtml' %},
		'pageItemRemainHtml': {% render 'boost-pfs-filter-html', layout: 'pageItemRemainHtml' %},
		'paginateHtml': {% render 'boost-pfs-filter-html', layout: 'paginateHtml' %},

		// Sorting template
		'sortingHtml': {% render 'boost-pfs-filter-html', layout: 'sortingHtml' %},
	};
</script>

{% schema %}

  {
    "name": "Collection pages",
    "settings": [
      {
        "type": "range",
        "id": "per_row",
        "label": "Products per row",
        "default": 4,
        "min": 1,
        "max": 5,
        "step": 1
      },
      {
        "type": "checkbox",
        "id": "collection_image_enable",
        "label": "Show collection image",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "parallax",
        "label": "Parallax image",
        "default": true
      },
      {
        "type": "select",
        "id": "description_position",
        "label": "Collection description position",
        "default": "top",
        "options": [
          {
            "value": "top",
            "label": "Top of page"
          },
          {
            "value": "bottom",
            "label": "Bottom of page"
          }
        ]
      },
      {
        "type": "select",
        "id": "collection_subnav_style",
        "label": "Subnavigation style",
        "default": "inline",
        "options": [
          {
            "value": "none",
            "label": "None"
          },
          {
            "value": "inline",
            "label": "Inline"
          }
        ]
      },
      {
        "type": "select",
        "id": "collection_tags_style",
        "label": "Tag filter style",
        "default": "none",
        "options": [
          {
            "value": "none",
            "label": "None"
          },
          {
            "value": "inline",
            "label": "Inline"
          },
          {
            "value": "dropdown",
            "label": "Dropdown"
          }
        ],
        "info": "Only one option can use Inline style at a time"
      },
      {
        "type": "checkbox",
        "id": "collection_sort_enable",
        "label": "Show sort options",
        "default": false
      }
    ]
  }
{% endschema %}
